{
    "version": "1.5.0",
    "architecture": {
        "32bit": {
            "url": "https://github.com/ethersphere/bee/releases/download/v1.5.0/bee-windows-386.zip",
            "bin": [
                "bee.exe"
            ],
            "hash": "ae356daae380b637bddfc7c0e4b38dd072c649b0b7aba57a15ee75b07d11a2e4"
        },
        "64bit": {
            "url": "https://github.com/ethersphere/bee/releases/download/v1.5.0/bee-windows-amd64.zip",
            "bin": [
                "bee.exe"
            ],
            "hash": "d65f0a19e37b12535ed726d75eb12af10d3739d6f72d59a5e0b5a8973f78cdea"
        }
    },
    "homepage": "https://github.com/ethersphere/bee",
    "license": "BSD-3-Clause",
    "description": "Swarm client implemented in Go.",
    "persist": [
        "data",
        "packaging/scoop/bee.yaml"
    ],
    "post_install": [
        "Write-Host 'Running postinstall command'",
        "if(!(Test-Path $persist_dir\\bee.yaml)){New-Item -ItemType SymbolicLink -Path \"$persist_dir\\bee.yaml\" -Target \"$persist_dir\\packaging\\scoop\\bee.yaml\" | Out-Null}",
        "(Get-Content -path $persist_dir\\bee.yaml -Raw) -replace './bee.yaml',\"$persist_dir\\bee.yaml\" | Set-Content -Path $persist_dir\\bee.yaml",
        "(Get-Content -path $persist_dir\\bee.yaml -Raw) -replace './data',\"$persist_dir\\data\" | Set-Content -Path $persist_dir\\bee.yaml",
        "(Get-Content -path $persist_dir\\bee.yaml -Raw) -replace './password',\"$persist_dir\\password\" | Set-Content -Path $persist_dir\\bee.yaml",
        "if(!(Test-Path $persist_dir\\password)){[System.Web.Security.Membership]::GeneratePassword(32,5) | Set-Content -Path $persist_dir\\password}",
        "if(sc.exe query SwarmBeeSvc | Select-String FAILED){sc.exe create SwarmBeeSvc binPath= \"$dir\\bee.exe start --config=$persist_dir\\bee.yaml\" type= share start= auto displayName= \"Bee\"; sc.exe description SwarmBeeSvc \"Swarm client implemented in Go.\"}",
        "if($global){$ETH_ADDRESS = (((C:\\ProgramData\\scoop\\shims\\bee.exe init --config=$persist_dir\\bee.yaml | Select-String ethereum) -split ' ‘)[-1]).Trim('\"')} else {$ETH_ADDRESS = (((bee.exe init --config=$persist_dir\\bee.yaml | Select-String ethereum) -split ' ‘)[-1]).Trim('\"')}; Write-Host \"Please make sure there is sufficient xDAI (for Gas) and BZZ available on $ETH_ADDRESS address.\nLearn how to fund your node by visiting our docs at https://docs.ethswarm.org/docs/installation/fund-your-node\"",
        "Write-Host \"Obtain a free Infura account and set: swap-endpoint: wss://goerli.infura.io/ws/v3/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx inside $persist_dir\\bee.yaml\"",
        "Write-Host \"After the initial fund deploy Bee chequebook with [sudo] $dir\\bee.exe deploy --config=$persist_dir\\bee.yaml\"",
        "Write-Host 'Start Bee service with [sudo] sc.exe start SwarmBeeSvc'"
    ]
}